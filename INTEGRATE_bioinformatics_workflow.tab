# Example command structure for INTEGRATE bioinformatic analysis
# Assumes all dependencies are installed.
# For installation instructions, please refer to the respective GitHub repositories or official documentation:


# MetaWRAP: https://github.com/bxlab/metaWRAP
# Kraken2: https://github.com/DerrickWood/kraken2
# Bracken: https://github.com/jenniferlu717/Bracken
# KrakenTools: https://github.com/jenniferlu717/KrakenTools
# HISAT2: https://github.com/DaehwanKimLab/hisat2
# Samtools: http://www.htslib.org/
# deepTools: https://github.com/deeptools/deepTools
# PanGIA: https://github.com/PanGIA-Tool/PanGIA
# MaAsLin2: https://github.com/biobakery/Maaslin2

# Set the number of threads to use
THREADS=8

# Define paths to your data and reference genomes
RAW_DATA_DIR="/path/to/raw_data"
OUTPUT_DIR="/path/to/output"
KRAKEN_DB="/path/to/kraken_db"
HUMAN_GENOME_DIR="/path/to/human_genome"
REFERENCE_ASSEMBLY="/path/to/reference_assembly.fasta"

# Create output directory if it doesn't exist
mkdir -p $OUTPUT_DIR

# Quality control of raw sequencing reads using MetaWRAP's read_qc module
metawrap read_qc -1 $RAW_DATA_DIR/sample_R1.fastq -2 $RAW_DATA_DIR/sample_R2.fastq -o $OUTPUT_DIR/$SAMPLE_NAME

# Run Kraken2 for taxonomic classification of paired-end DNA reads with confidence threshold
kraken2 --db $KRAKEN_DB --threads $THREADS --paired --confidence 0.1 \
  --report $OUTPUT_DIR/sample_dna.report2 \
  $OUTPUT_DIR/$SAMPLE_NAME/sample_dna_R1.fastq $OUTPUT_DIR/$SAMPLE_NAME/sample_dna_R2.fastq

# Run Kraken2 for taxonomic classification of paired-end RNA reads with confidence threshold
kraken2 --db $KRAKEN_DB --threads $THREADS --paired --confidence 0.1 \
  --report $OUTPUT_DIR/sample_rna.report2 \
  $OUTPUT_DIR/read_qc/sample_rna_R1.fastq $OUTPUT_DIR/read_qc/sample_rna_R2.fastq

# Re-estimate DNA read counts using Bracken
bracken -d $KRAKEN_DB -i $OUTPUT_DIR/sample_dna.report2 -o $OUTPUT_DIR/sample_dna_bracken.report2 -r 150 -l S -t $THREADS

# Generate biom file using all .report2 files (both RNA and DNA)
kraken-biom $OUTPUT_DIR/*.report2 -o $OUTPUT_DIR/combined.biom --fmt json

# Assign metadata to biom file using the biom tool
biom add-metadata -i $OUTPUT_DIR/combined.biom -o $OUTPUT_DIR/combined_with_metadata.biom \
  --observation-metadata-fp metadata.tsv --sample-metadata-fp metadata.tsv

# Extract reads associated with Adenoviridae family using KrakenTools
extract_kraken_reads.py -k $OUTPUT_DIR/sample_rna.report2 \
  -s1 $OUTPUT_DIR/read_qc/sample_rna_R1.fastq -s2 $OUTPUT_DIR/read_qc/sample_rna_R2.fastq \
  -o $OUTPUT_DIR/adenoviridae_reads_1.fq -o2 $OUTPUT_DIR/adenoviridae_reads_2.fq \
  -t 10508

# Map extracted reads to Human adenovirus F40 and F41 genomes using HISAT2 and convert to BAM on-the-fly
hisat2 -p $THREADS -x $INDEX \
  -1 $OUTPUT_DIR/adenoviridae_reads_1.fq -2 $OUTPUT_DIR/adenoviridae_reads_2.fq | \
  samtools sort --threads 2 -m 8G --reference $REFERENCE_ASSEMBLY \
  -o $OUTPUT_DIR/adenoviridae_mapped.bam

# Index the BAM file
samtools index $OUTPUT_DIR/adenoviridae_mapped.bam

# Generate coverage statistics using samtools
samtools coverage $OUTPUT_DIR/adenoviridae_mapped.bam > $OUTPUT_DIR/adenoviridae_coverage.txt

# Convert BAM to BigWig for visualization in IGV using deepTools
bamCoverage -b $OUTPUT_DIR/adenoviridae_mapped.bam -o $OUTPUT_DIR/adenoviridae_coverage.bw

# Perform competitive mapping using PanGIA
pangia -i $OUTPUT_DIR/read_qc/sample_1.fastq $OUTPUT_DIR/read_qc/sample_2.fastq -d database/$FASTA_DATABASE -o $OUTPUT_DIR/pangia_output